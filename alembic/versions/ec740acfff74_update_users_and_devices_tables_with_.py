"""Update users and devices tables with new fields

Revision ID: ec740acfff74
Revises: 5c4b7fcd5aa9
Create Date: 2024-10-29 15:22:41.783176

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ec740acfff74'
down_revision: Union[str, None] = '5c4b7fcd5aa9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('devices', sa.Column('id', sa.Integer(), nullable=False))
    op.add_column('devices', sa.Column('name', sa.String(), nullable=True))
    op.add_column('devices', sa.Column('type', sa.String(), nullable=True))
    op.add_column('devices', sa.Column('serial_number', sa.String(), nullable=True))
    op.add_column('devices', sa.Column('status', sa.Integer(), nullable=True))
    op.add_column('devices', sa.Column('firmware_version', sa.String(), nullable=True))
    op.add_column('devices', sa.Column('registration_date', sa.Date(), nullable=True))
    op.add_column('devices', sa.Column('last_seen', sa.Time(), nullable=True))
    op.add_column('devices', sa.Column('ip_address', postgresql.INET(), nullable=True))
    op.add_column('devices', sa.Column('mac_address', sa.CHAR(length=17), nullable=True))
    op.add_column('devices', sa.Column('prov_key', sa.Integer(), nullable=True))
    op.add_column('devices', sa.Column('config', sa.JSON(), nullable=True))
    op.add_column('devices', sa.Column('isonline', sa.Boolean(), nullable=True))
    op.add_column('devices', sa.Column('encryption_key', sa.String(), nullable=True))
    op.add_column('devices', sa.Column('auth_token', sa.String(), nullable=True))
    op.add_column('devices', sa.Column('notes', sa.String(), nullable=True))
    op.add_column('devices', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.drop_index('ix_devices_device_id', table_name='devices')
    op.create_unique_constraint(None, 'devices', ['prov_key'])
    op.drop_column('devices', 'device_name')
    op.drop_column('devices', 'rating')
    op.drop_column('devices', 'device_id')
    op.add_column('users', sa.Column('created_at', sa.DateTime(), nullable=True))
    op.drop_index('ix_users_user_id', table_name='users')
    op.drop_index('ix_users_username', table_name='users')
    op.create_unique_constraint(None, 'users', ['username'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.create_index('ix_users_username', 'users', ['username'], unique=True)
    op.create_index('ix_users_user_id', 'users', ['user_id'], unique=False)
    op.drop_column('users', 'created_at')
    op.add_column('devices', sa.Column('device_id', sa.INTEGER(), autoincrement=True, nullable=False))
    op.add_column('devices', sa.Column('rating', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('devices', sa.Column('device_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'devices', type_='unique')
    op.create_index('ix_devices_device_id', 'devices', ['device_id'], unique=False)
    op.drop_column('devices', 'created_at')
    op.drop_column('devices', 'notes')
    op.drop_column('devices', 'auth_token')
    op.drop_column('devices', 'encryption_key')
    op.drop_column('devices', 'isonline')
    op.drop_column('devices', 'config')
    op.drop_column('devices', 'prov_key')
    op.drop_column('devices', 'mac_address')
    op.drop_column('devices', 'ip_address')
    op.drop_column('devices', 'last_seen')
    op.drop_column('devices', 'registration_date')
    op.drop_column('devices', 'firmware_version')
    op.drop_column('devices', 'status')
    op.drop_column('devices', 'serial_number')
    op.drop_column('devices', 'type')
    op.drop_column('devices', 'name')
    op.drop_column('devices', 'id')
    # ### end Alembic commands ###
